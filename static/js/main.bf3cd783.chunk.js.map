{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","width","position","top","left","transform","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","display","Todo","forwardRef","props","ref","useState","open","setOpen","classes","input","setInput","className","Modal","onClose","e","FormControl","InputLabel","Input","placeholder","todo","value","onChange","target","Button","variant","color","type","onClick","collection","doc","id","set","merge","disabled","List","ListItem","ListItemText","primary","secondary","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf3cd783.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA1iTTy-yUyd6qA1lf2jD6O6hMYWr4c2EM\",\r\n    authDomain: \"todo-app-cfe6d.firebaseapp.com\",\r\n    projectId: \"todo-app-cfe6d\",\r\n    storageBucket: \"todo-app-cfe6d.appspot.com\",\r\n    messagingSenderId: \"520483322510\",\r\n    appId: \"1:520483322510:web:0843c22fcdb543fee727df\",\r\n    measurementId: \"G-1TW1X5MBSL\"\r\n});\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n\r\n\r\n","import { Button, FormControl, Input, InputLabel, List, ListItem, ListItemText, makeStyles, Modal } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport './Todo.css';\r\nimport db from './firebase';\r\nimport { useState, forwardRef } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        width: 400,\r\n        position: `absolute`,\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst Todo = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const [input, setInput] = useState();\r\n\r\n\r\n    const updateTodo = () => {\r\n\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input\r\n        }, { merge: true })\r\n        setInput('')\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"todo\" ref={ref}>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={e => setOpen(false)}\r\n                >\r\n                    <div className={classes.paper}>\r\n                        <FormControl className=\"app__form-control\" >\r\n                            <InputLabel className=\"app_label\">Write a Todo</InputLabel>\r\n                            <Input placeholder={props.todo.todo} value={input} onChange={e => setInput(e.target.value)} className=\"todo__input\" />\r\n                        </FormControl>\r\n                        <Button variant=\"contained\" color=\"primary\" type='submit' onClick={updateTodo} disabled={!input} className=\"todo__btn\">\r\n                            Update Todo\r\n                </Button>\r\n                    </div>\r\n                </Modal>\r\n                <List className=\"todo__list\">\r\n                    <ListItem className=\"todo__content-list\">\r\n                        <ListItemText primary={props.todo.todo} secondary='Dummy deadline' className=\"todo__content\" />\r\n                    </ListItem>\r\n                    <Button onClick={e => setOpen(true)} className=\"todo__edit-btn\">Edit</Button>\r\n                    <DeleteForeverIcon onClick={e => db.collection('todos').doc(props.todo.id).delete()} className=\"todo__delete-btn\" />\r\n                </List>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n\r\nexport default Todo;\r\n","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\n\nconst App = () => {\n  const [todos, setTodos] = useState([])\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo })))\n    })\n  }, [])\n\n  const addTodo = (e) => {\n    e.preventDefault()\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    setInput('');\n\n  }\n  return (\n    <div className=\"app\">\n      <form>\n        <FormControl className=\"app__form-control\" >\n          <InputLabel className=\"app_label\">Write a Todo</InputLabel>\n          <Input value={input} onChange={e => setInput(e.target.value)} className=\"app__input\" />\n        </FormControl>\n        <Button variant=\"contained\" color=\"primary\" type='submit' onClick={addTodo} disabled={!input} className=\"app__btn\">\n          Add Todo\n        </Button>\n      </form>\n      <ul>\n        <FlipMove>\n          {todos.map(todo => (\n            <Todo todo={todo} key={todo.id} />\n          ))}\n        </FlipMove>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}